{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","values","errors","maxlength","charsLeft","validate","validateString","url","validateUrl","id","initialValues","fieldName","fieldValue","trim","test","length","getCharactersLeft","type","name","value","handleChange","event","target","setState","replace","handleBlur","rest","error","handleSubmit","onAdd","props","preventDefault","formValidation","Object","keys","reduce","acc","newError","checkFormError","this","onSubmit","autoComplete","placeholder","onChange","onBlur","maxLength","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1036f71c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      imdbId: '',\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n    },\n    errors: {},\n    maxlength: 30,\n    charsLeft: 30,\n  };\n\n  validate = {\n    title: title => this.validateString('Title', title),\n    description: description => this.validateString('Description', description),\n    imgUrl: url => this.validateUrl(url),\n    imdbUrl: url => this.validateUrl(url),\n    imdbId: id => this.validateString('ID', id),\n  };\n\n  initialValues = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  validateString = (fieldName, fieldValue) => {\n    if (fieldValue.trim() === '') {\n      return `${fieldName} is required`;\n    }\n\n    if (fieldName === 'Title' && /[^a-zA-Z -]/.test(fieldValue)) {\n      return 'Invalid characters';\n    }\n\n    if (fieldValue.trim().length < 1) {\n      return `${fieldName} needs to be at least one characters`;\n    }\n\n    return null;\n  };\n\n  validateUrl = (url) => {\n    if (\n      // eslint-disable-next-line max-len\n      /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(\n        url,\n      )\n    ) {\n      return null;\n    }\n\n    if (url.trim() === '') {\n      return 'Url is required';\n    }\n\n    return 'Please enter a valid Url';\n  };\n\n  getCharactersLeft = (type, name, value, charsLeft) => {\n    const { maxlength } = this.state;\n\n    return type === 'text' && name === 'title'\n      ? maxlength - value.length\n      : charsLeft;\n  }\n\n  handleChange = (event) => {\n    const { name, value, type } = event.target;\n\n    this.setState(state => ({\n      values: {\n        ...state.values,\n        [name]: type === 'text' ? value.replace(/^\\s/g, '') : value,\n      },\n      charsLeft: this.getCharactersLeft(type, name, value, state.charsLeft),\n    }));\n  }\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    const { errors } = this.state;\n\n    const { [name]: removedError, ...rest } = errors;\n    const error = this.validate[name](value);\n\n    this.setState({\n      errors: {\n        ...rest,\n        ...(error && { [name]: error }),\n      },\n    });\n  };\n\n  handleSubmit = (event) => {\n    const { values, errors, maxlength } = this.state;\n    const { onAdd } = this.props;\n\n    event.preventDefault();\n\n    const formValidation = Object.keys(values).reduce(\n      (acc, key) => {\n        const newError = this.validate[key](values[key]);\n\n        return {\n          errors: {\n            ...acc.errors,\n            ...(newError && { [key]: newError }),\n          },\n        };\n      },\n      {\n        errors: { ...errors },\n      },\n    );\n\n    this.setState({\n      errors: formValidation.errors,\n    });\n\n    if (this.checkFormError(formValidation)) {\n      onAdd(values);\n      this.setState({\n        values: this.initialValues,\n        charsLeft: maxlength,\n      });\n    }\n  };\n\n  checkFormError = formValidation => !Object\n    .values(formValidation.errors).length;\n\n  render() {\n    const {\n      maxlength,\n      charsLeft,\n      values,\n      errors,\n    } = this.state;\n\n    return (\n      <div className=\"newMovie\">\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <div>\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              className={errors.imdbId ? 'error' : ''}\n              value={values.imdbId}\n              placeholder=\"Please enter a ID\"\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.imdbId && (\n              <div className=\"errorText\">\n                {errors.imdbId}\n              </div>\n            )}\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"title\"\n              maxLength={maxlength}\n              className={errors.title ? 'error' : ''}\n              value={values.title}\n              placeholder=\"Please enter a title\"\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n            <p>\n              Characters Left:\n              {' '}\n              { charsLeft }\n            </p>\n            {errors.title && (\n            <div className=\"errorText\">\n              {errors.title}\n            </div>\n            )}\n          </div>\n          <div>\n            <textarea\n              name=\"description\"\n              value={values.description}\n              placeholder=\"Please enter a description\"\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.description && (\n              <div className=\"errorText\">\n                {errors.description}\n              </div>\n            )}\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              className={errors.imgUrl ? 'error' : ''}\n              value={values.imgUrl}\n              placeholder=\"Please enter a image Url\"\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.imgUrl && (\n            <div className=\"errorText\">\n              {errors.imgUrl}\n            </div>\n            )}\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              className={errors.imdbUrl ? 'error' : ''}\n              value={values.imdbUrl}\n              placeholder=\"Please enter a Imdb Url\"\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.imdbUrl && (\n            <div className=\"errorText\">\n              {errors.imdbUrl}\n            </div>\n            )}\n          </div>\n          <button\n            className=\"add\"\n            type=\"submit\"\n            disabled={Object.keys(errors).length !== 0}\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}